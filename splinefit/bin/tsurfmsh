#!/usr/bin/env python
"""Convert GOCAD mesh file to gmsh mesh file. 
Usage: tsurfmsh <input> <output> -options=...

    input file          tsurf file to read
    output file         msh file to write

Options:
    -min_elements int   Skip surfaces with too few elements"""
import sys
import splinefit as sf


def main():
    if len(sys.argv) == 1:
        print(__doc__)
        exit(1)
    
    options = get_options(sys.argv)
    sf.options.check_options(sys.argv, options)
    
    i = 0
    p, t = sf.tsurf.read(options.input, min_elems=options.min_elements)
    print('Converting from GOCAD to gmsh')
    print(' - Found %d surface(s)' % len(p))
    for pi, ti in zip(p, t): 
        ei = sf.tsurf.msh(ti)
        filename= '%s_%d.msh'%('.'.join(options.output.split('.')[0:-1]), i)
        sf.msh.write(filename, pi, ei)
        print(' - Wrote <%d tris, %d nodes> : %s ' % (ei.shape[0], pi.shape[0], 
              filename))
    
        i += 1

def get_options(argv):
    """
    Get command line arguments.
    """

    options = sf.utils.Struct()
    if '-help' in argv:
        print(__doc__)
        exit()

    args = sf.options.get_options(argv)

    if '-min_elements' in args:
        options.min_elements = int(args['-min_elements'])
    else:
        options.min_elements = 10

    try:
        options.input = args['args'][0]
        options.output = args['args'][1]
    except:
        print(__doc__)
        exit(1)

    return options


if __name__ == '__main__':
    main()
